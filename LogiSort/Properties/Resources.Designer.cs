//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LogiSort.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LogiSort.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Темная тема.
        /// </summary>
        public static string dark_theme {
            get {
                return ResourceManager.GetString("dark_theme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сканировать папку.
        /// </summary>
        public static string HomeScan_folder {
            get {
                return ResourceManager.GetString("HomeScan_folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сортировать.
        /// </summary>
        public static string HomeSort {
            get {
                return ResourceManager.GetString("HomeSort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Программа для сортировки видео и фото по папкам.
        ///Scan folder
        ///.
        /// </summary>
        public static string HomeWelcome_text {
            get {
                return ResourceManager.GetString("HomeWelcome_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Светлая тема.
        /// </summary>
        public static string light_theme {
            get {
                return ResourceManager.GetString("light_theme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Главная.
        /// </summary>
        public static string Main_page_String_0 {
            get {
                return ResourceManager.GetString("Main_page_String_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Настройки.
        /// </summary>
        public static string MainButtonSettings_1 {
            get {
                return ResourceManager.GetString("MainButtonSettings_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Настройки.
        /// </summary>
        public static string Page_Title_Settings {
            get {
                return ResourceManager.GetString("Page_Title_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Автоматические обновления.
        /// </summary>
        public static string SettAutomatic_updates {
            get {
                return ResourceManager.GetString("SettAutomatic_updates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Отменить.
        /// </summary>
        public static string SettCancel {
            get {
                return ResourceManager.GetString("SettCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Смена темы .
        /// </summary>
        public static string SettChange_of_topic {
            get {
                return ResourceManager.GetString("SettChange_of_topic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Проверить обновления.
        /// </summary>
        public static string SettCheck_for_updates {
            get {
                return ResourceManager.GetString("SettCheck_for_updates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Включить логирование.
        /// </summary>
        public static string SettEnable_logging {
            get {
                return ResourceManager.GetString("SettEnable_logging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Масштаб.
        /// </summary>
        public static string SettFont {
            get {
                return ResourceManager.GetString("SettFont", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Языка.
        /// </summary>
        public static string SettingsLanguage {
            get {
                return ResourceManager.GetString("SettingsLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Смена языка.
        /// </summary>
        public static string SettingsLanguagechange {
            get {
                return ResourceManager.GetString("SettingsLanguagechange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Логирование.
        /// </summary>
        public static string SettLogging {
            get {
                return ResourceManager.GetString("SettLogging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Уведомления .
        /// </summary>
        public static string SettNotifications {
            get {
                return ResourceManager.GetString("SettNotifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Открыть лог.
        /// </summary>
        public static string SettOpen_log {
            get {
                return ResourceManager.GetString("SettOpen_log", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сбросить настройки.
        /// </summary>
        public static string SettReset_settings {
            get {
                return ResourceManager.GetString("SettReset_settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сохранить.
        /// </summary>
        public static string SettSave {
            get {
                return ResourceManager.GetString("SettSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Звуковые.
        /// </summary>
        public static string SettSound {
            get {
                return ResourceManager.GetString("SettSound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Тема.
        /// </summary>
        public static string SettTopic {
            get {
                return ResourceManager.GetString("SettTopic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Обновления.
        /// </summary>
        public static string SettUpdates {
            get {
                return ResourceManager.GetString("SettUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на  Визуальные.
        /// </summary>
        public static string SettVisual {
            get {
                return ResourceManager.GetString("SettVisual", resourceCulture);
            }
        }
    }
}
